AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWS SSO Redirect'

Mappings:
  DnsMap: 
    HostedZone:
      Name: 'sebkrueger.info'
      Id: Z0326927MQCUOO2NQ215 # sebkrueger.info
  RedirectMap:
    Destination:
      URL: 'www.linkedin.com/in/sebastiankrueger/'
  SecurityMap:
    Certificate:
      ARN: arn:aws:acm:us-east-1:885890946361:certificate/048bf7ea-e462-4d40-b691-4b1ce40aa0cf


Resources:
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
        - !FindInMap [DnsMap, HostedZone, Name]
        Comment: !FindInMap [DnsMap, HostedZone, Name]
        DefaultCacheBehavior:
          # "Managed-CachingDisabled" from https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-cache-policies.html
          CachePolicyId: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad
          FunctionAssociations:
          - EventType: viewer-request
            FunctionARN: !GetAtt RedirectFunction.FunctionMetadata.FunctionARN
          TargetOriginId: redirectOrigin
          ViewerProtocolPolicy: 'redirect-to-https'
        Enabled: true
        HttpVersion: http2
        IPV6Enabled: true
        # CloudFront requires at least one origin, even though we're always going to redirect
        Origins:
        - Id: redirectOrigin
          DomainName: aws.amazon.com
          CustomOriginConfig:
            OriginProtocolPolicy: match-viewer
        # PriceClass: 'PriceClass_All'
        ViewerCertificate:
          AcmCertificateArn: !FindInMap [SecurityMap, Certificate, ARN]
          MinimumProtocolVersion: 'TLSv1.1_2016'
          SslSupportMethod: 'sni-only'

  RedirectFunction:
    Type: AWS::CloudFront::Function
    Properties:
      AutoPublish: true
      FunctionCode: !Sub 
      - |
        function handler(event) {
          return {
            statusCode: 302,
            statusDescription: 'Found',
            headers: {
              location: { value: 'https://${RedirectDomainName}/' }
            }
          }
        }
      - RedirectDomainName: !FindInMap [RedirectMap, Destination, URL]
      FunctionConfig:
        Comment: !Sub 
        - 'Redirect to ${RedirectDomainName}'
        - RedirectDomainName: !FindInMap [RedirectMap, Destination, URL]
        Runtime: cloudfront-js-1.0
      Name: !Sub "${AWS::StackName}-redirectFunction"

  Route53RecordIPv4:
    Type: 'AWS::Route53::RecordSetGroup'
    Properties:
      HostedZoneId: !FindInMap [DnsMap, HostedZone, Id]
      RecordSets:
      - Name: !FindInMap [DnsMap, HostedZone, Name]
        Type: A
        AliasTarget:
          # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-aliastarget-1.html#cfn-route53-aliastarget-hostedzoneid
          HostedZoneId: Z2FDTNDATAQYW2 # Magic HostedZoneId for CloudFront
          DNSName: !GetAtt CloudFrontDistribution.DomainName

  Route53RecordIPv6:
    Type: 'AWS::Route53::RecordSetGroup'
    Properties:
      HostedZoneId: !FindInMap [DnsMap, HostedZone, Id]
      RecordSets:
      - Name: !FindInMap [DnsMap, HostedZone, Name]
        Type: AAAA
        AliasTarget:
          # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-aliastarget-1.html#cfn-route53-aliastarget-hostedzoneid
          HostedZoneId: Z2FDTNDATAQYW2 # Magic HostedZoneId for CloudFront
          DNSName: !GetAtt CloudFrontDistribution.DomainName